git clone [rapasatory_url] allows you to edit the rapastory localy
git add tracks the file for any changes that happens to it there for making sure git can realize those changes for applying purposes
git commit is going to commit the changes that have been tracked using git add there for applying them
to setup ssh keys use this webpage its also there in the video https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent

most important codes that allowed me to run git push

$ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
in my case this created 2 files with the name ive chosed mykey 
mykey is the private key mykey.pub is the public one which you need to move to github 

$ eval "$(ssh-agent -s)"
$ ssh-add ~/.ssh/(name of file where you stored the private key)

to create a new rapastory localy without attaching it to gethub 
you can do the following 

git init (which initializes the current folder as a git rapastory)

after you did that there is no connection between that rapastory and github at all to 
create the connection you do the following 

you create a new rapastory in github with the same name as the folder that you created 

then you take its link 
and you do

git remote add origin (github rapastory link)

to check that it worked 

git remote -v

to make a shortcut for 

git push origin master 

git push -u origin master <!-- 'u' stands for upstream -->

after that command you setup a defualt and you can use git push without anything else 